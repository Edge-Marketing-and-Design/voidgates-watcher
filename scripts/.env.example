# Cloudflare API Token must include the following permissions:
# - Scope: Account, Permission: Account Firewall Access Rules, Access Level: Edit
# - Scope: Account, Permission: Account Settings, Access Level: Read
# - Scope: Zone,    Permission: Zone,                      Access Level: Read
# - Scope: Zone,    Permission: Firewall Services,         Access Level: Edit
CF_API_TOKEN=

# Cloudflare Account ID (used for global IP blocks)
CF_ACCOUNT_ID=

# Optional: Cloudflare Zone ID (for per-site blocks)
# If set, IP blocks will only apply to this zone
# If left blank, blocks will be applied globally across your account
VOIDGATES_ZONE=

# Path to your server's access log file
# Apache example: /opt/bitnami/apache2/logs/access_log
# Nginx example: /var/log/nginx/access.log
# For testing: ./test_access.log
LOG_PATH=/opt/bitnami/apache2/logs/access_log

# === 404-Based Blocking Settings ===

# Number of 404s from the same IP required to trigger a block
404_BLOCK_THRESHOLD=10

# Time window (in seconds) in which the 404 threshold must be exceeded
404_BLOCK_INTERVAL_SECONDS=60

# How long (in seconds) the IP should remain blocked for 404-based blocks
# Leave blank or set to 0 to block permanently
404_BLOCK_DURATION_SECONDS=3600

# === Rate Limiting Settings ===

# Maximum number of requests allowed from the same IP
RATE_LIMIT_THRESHOLD=25

# Time window (in seconds) in which the request threshold must be exceeded
RATE_LIMIT_INTERVAL_SECONDS=30

# How long (in seconds) the IP should remain blocked for rate limiting
# Leave blank or set to 0 to block permanently
RATE_LIMIT_DURATION_SECONDS=3600

# === Path-Based Abuse Blocking Settings ===

# Number of times an IP can hit the same path before being blocked
PATH_BLOCK_THRESHOLD=15

# Time window (in seconds) in which the path threshold must be exceeded
PATH_BLOCK_INTERVAL_SECONDS=60

# How long (in seconds) the IP should remain blocked for path-based blocks
# Leave blank or set to 0 to block permanently
PATH_BLOCK_DURATION_SECONDS=60

# === Cleanup ===

# How often (in seconds) to check for and remove expired blocks
CLEANUP_INTERVAL_SECONDS=60


# === Whitelist ===

# Path to a file containing IPs to whitelist
# Each IP should be on a new line
WHITELIST_PATH=

# If true, the script will simulate blocks without calling the Cloudflare API
# Useful for testing and development
DRY_RUN=true